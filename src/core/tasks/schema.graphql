enum TaskStateEnum {
    PENDING
    IN_WORK
    COMPLETED
}

type Task {
    id: Int!
    authorId: Int!
    name: String!
    description: String
    expires: String!
    isCompleted: Boolean!
    status: TaskStateEnum!
    createdAt: String!
    updatedAt: String
    author: String
}

input NewTask {
    authorId: Int!
    name: String!
    description: String!
    expires: String!
    isCompleted: Boolean!
    status: TaskStateEnum!
}

input UpdateTask {
    id: Int!
    name: String
    description: String
    expires: String
    isCompleted: Boolean
    status: TaskStateEnum
}

type Query {
    tasks: [Task!]!
    task(id: ID!): Task
}

type Mutation {
    createTask(input: NewTask): Task
    updateTask(input: UpdateTask): Task
    deleteTask(input: ID): Task
}